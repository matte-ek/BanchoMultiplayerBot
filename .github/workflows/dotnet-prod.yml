name: .NET

on:
  push:
    branches: [ "production" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore BanchoSharp from cache
      id: cache-banchosharp
      uses: actions/cache@v4
      with:
        path: ~/work/BanchoMultiplayerBot/forks/BanchoSharp/BanchoSharp/bin
        key: ${{ runner.os }}-forks-banchosharp

    - name: Build BanchoSharp
      if: steps.cache-banchosharp.outputs.cache-hit != 'true'
      run: |
        cd ${{github.workspace}}
        cd ..
        mkdir -p forks
        cd forks
        git clone --single-branch --branch bancho-multiplayer-bot https://github.com/matte-ek/BanchoSharp.git
        cd BanchoSharp/BanchoSharp
        dotnet build -c Release

    - name: Restore osu-sharp from cache
      id: cache-osusharp
      uses: actions/cache@v4
      with:
        path: ~/work/BanchoMultiplayerBot/forks/osu-sharp/OsuSharp/bin
        key: ${{ runner.os }}-forks-osusharp

    - name: Build osu-sharp
      if: steps.cache-osusharp.outputs.cache-hit != 'true'
      run: |
        cd ${{github.workspace}}
        cd ..
        mkdir -p forks
        cd forks
        git clone --single-branch --branch bancho-multiplayer-bot https://github.com/matte-ek/osu-sharp.git
        cd osu-sharp/OsuSharp
        dotnet build -c Release

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --verbosity normal

    - name: Publish
      run: dotnet publish -c Release --no-restore
    
    - name: Upload build
      uses: actions/upload-artifact@v4
      id: build-artifact
      with:
        name: build
        path: BanchoMultiplayerBot.Host.WebApi/bin/Release/net9.0/publish

    - name: Deploy build
      run: |
        curl \
        --silent \
        --request POST \
        --url ${{ secrets.DEPLOY_TARGET }} \
        --header 'Content-Type: application/json' \
        --data '{ "DeployKey": "${{ secrets.DEPLOY_KEY }}", "ArtifactId": ${{ steps.build-artifact.outputs.artifact-id }} }'